diff --git a/helpers/python-skeletons/pytest/__init__.py b/helpers/python-skeletons/pytest/__init__.py
index ae4549f..5d51a7e 100644
--- a/helpers/python-skeletons/pytest/__init__.py
+++ b/helpers/python-skeletons/pytest/__init__.py
@@ -76,11 +76,11 @@ class mark:
         value.
 
         Optionally specify a reason for better reporting.
-        
-        Evaluation happens within the module global context. 
+
+        Evaluation happens within the module global context.
         Example: ``skipif('sys.platform == "win32"')`` skips the test if
         we are on the win32 platform.
-        
+
         see http://pytest.org/latest/skipping.html
         """
 
@@ -88,15 +88,15 @@ class mark:
     def xfail(condition=None, reason=None, run=True):
         """mark the the test function as an expected failure if eval(condition)
         has a True value.
-        
+
         Optionally specify a reason for better reporting and run=False if
         you don't even want to execute the test function.
-        
+
         See http://pytest.org/latest/skipping.html
         """
 
     @staticmethod
-    def parametrize(argnames, argvalues): 
+    def parametrize(argnames, argvalues):
         """call a test function multiple times passing in different arguments
         in turn.
 
@@ -113,14 +113,14 @@ class mark:
         """
 
     @staticmethod
-    def usefixtures(*fixturenames): 
-        """mark tests as needing all of the specified fixtures. 
-        
+    def usefixtures(*fixturenames):
+        """mark tests as needing all of the specified fixtures.
+
         see http://pytest.org/latest/fixture.html#usefixtures
         """
 
     @staticmethod
-    def tryfirst(f): 
+    def tryfirst(f):
         """mark a hook implementation function such that the plugin machinery
         will try to call it first/as early as possible.
         """
@@ -133,8 +133,8 @@ class mark:
 
     @staticmethod
     def hookwrapper(f):
-        """A hook wrapper is a generator function which yields exactly once. 
-        When pytest invokes hooks it first executes hook wrappers and passes 
+        """A hook wrapper is a generator function which yields exactly once.
+        When pytest invokes hooks it first executes hook wrappers and passes
         the same arguments as to the regular hooks.
         """
 
